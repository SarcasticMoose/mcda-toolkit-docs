name: Test deployment

on:
  workflow_dispatch:
  pull_request:
    branches:
      - feature/add-building-api

jobs:
  build:
    name: Build Docusaurus
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install dependencies
        run: npm install
      - name: Build website
        run: npx docusaurus build

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build
  add-api-docs:
    name: Add api Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - uses: actions/setup-dotnet@v3.4.2
      - name: Install dll to md
        run: dotnet tool install -g XMLDoc2Markdown
      
      - name: Get latest stable version of McdaToolkit
        id: get_version
        run: |
          PACKAGE="mcdatoolkit"
          VERSION=$(curl -s "https://api.nuget.org/v3-flatcontainer/$PACKAGE/index.json" \
          | jq -r '.versions[]' | grep -Ev '-' | tail -n 1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Download .nupkg from NuGet
        run: |
          PACKAGE="mcdatoolkit"
          VERSION="${{ steps.get_version.outputs.version }}"
          curl -L -o "$PACKAGE.nupkg" "https://www.nuget.org/api/v2/package/$PACKAGE/$VERSION"

      - name: Extract DLL from netstandard2.0
        run: |
          mkdir extract
          unzip -q mcdatoolkit.nupkg -d extract
          ls extract/lib
          cp extract/lib/netstandard2.0/McdaToolkit.dll .
          cp extract/lib/netstandard2.0/McdaToolkit.xml .
          
      - name: Create markdown from .dll
        run: xmldoc2md McdaToolkit.dll --output output --structure tree
        
      - name: Refactor markdown
        run: python .github/workflows/api-docs-refactor.py